@page "/"

@inject EuroKwanzaViewModel vm
<PageTitle>Convert Kwanza BNA</PageTitle>


<RadzenCard>
    @if (vm.Status == StatusEnum.Carregando)
    {
        <div class="row">
            <div class="col-12">
                <span class="alert alert-primary">Processando...</span>
            </div>
        </div>

    }else if (vm.Status == StatusEnum.Finalizado) {
        <div class="row mb-3">
            <div class="col-12 d-md-flex align-items-center">
                <h1 class="m-0 h3">Convert Kwanza BNA <small class="text-muted d-block">Actualizado em @vm.Model.DataBna</small></h1>
                <RadzenButton Click=@(async args => await OnClick()) Class="btn btn-success ml-md-3 mt-md-0 mt-3"><RadzenIcon Icon="cached" /> Actualizar</RadzenButton>
            </div>
        </div>

        <div class="row">

            <div class="col-md-6 col-lg-4 col-xl-3 p-3">
                <RadzenLabel Text="Selecione o banco" Component="dpBanco" />
                <RadzenDropDown Name="dpBanco" AllowClear="true"  @bind-Value="@vm.Model.Banco" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" Class="form-control"
                            Placeholder="Selecione..." Data="@vm.Bancos" Change="@vm.OnChangeBanco" />
            </div>

            <div class="col-md-6 col-lg-4 col-xl-3 p-3">
                <RadzenLabel Text="Taxa %" Component="taxa" />
                <RadzenNumeric Name="taxa" TValue="decimal" Format="0.00" Step="0.1" @bind-Value=@vm.Model.Taxa Class="mr-1 form-control" Change="@vm.OnTaxa" />
            </div>

        </div>

        <div class="row">
            <div class="col-md-6 col-lg-4 col-xl-3 p-3">
                <RadzenLabel Text="Valor em KZ" Component="valorKwanza" />
                <RadzenNumeric TValue="decimal" Name="valorKwanza" Format="#,#0.00" Change="@vm.OnKwanza" @bind-Value=@vm.Model.kwanza Class="mr-1 form-control" />
            </div>

            <div class="col-md-6 col-lg-4 col-xl-3 p-3">
                <RadzenLabel Text="Valor em Euro" Component="valorEuro" />
                <RadzenNumeric Name="valorEuro" TValue="decimal" Format="#,#0.00" Change="@vm.OnEuro" @bind-Value=@vm.Model.Euro Class="mr-1 form-control" />
            </div>
        </div>

        <div class="row">
            <div class="12 border-bottom pt-2 pb-2">
                <p class="d-flex align-items-center"><strong class="mr-1">Valor do EURO:</strong> <span class="badge bg-success">@vm.Model.kwanzaEuro KZ</span></p>
            </div>

            <div class="12 border-bottom pt-2 pb-2">
                <p class="d-flex align-items-center"><strong class="mr-1">Valor do EURO com taxas:</strong> <span class="badge bg-primary">@vm.Model.kwanzaEuroTaxa KZ</span></p>
            </div>

            @if (vm.ValorCalculado.Length > 0)
            {
                <div class="12 pt-2">
                    <p><strong>Valor Calculado em:</strong> @vm.ValorCalculado</p>
                </div>
            }

        </div>
    }  
    else
    {
        <div class="row">
            <div class="col-12">
                <span class="alert alert-danger">Erro ao carregar os dados: @vm.Mensagem</span>
            </div>
        </div>
    }
</RadzenCard>



@code {


    protected override async Task OnInitializedAsync()
    {
        await vm.CarregarDados();
    }
   
    async Task OnClick()
    {
        await vm.OnActualizar();
        await InvokeAsync(StateHasChanged);
    }

  }